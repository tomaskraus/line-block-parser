-- lines (emptyLines) ------------------------------------------------------------------------
 []
-- parser flat (FLAT mode, no callback) ---------
test result data:  []
-- parser grouped (GROUPED mode, no callback) ---------
test result data:  []
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
-- parser flat (FLAT mode, callback no return) ---------
test result data:  []
-- parser grouped (GROUPED mode, callback no return) ---------
test result data:  []
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
-- parser flat (FLAT mode, callback return) ---------
test result: data  []
-- parser grouped (GROUPED mode, callback return) ---------
test result data:  []
-- lines () ------------------------------------------------------------------------
 [
  'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
  'Mary had a little lamb,',
  ' /*',
  '--  Its fleece was white as snow,',
  '--And every where that Mary went',
  '*/  ',
  '   The lamb was sure to go ;',
  'He followed her to school one day-',
  ' /* ',
  '--   That was against the rule,',
  '*/',
  'It made the children laugh and play,',
  '   To see a lamb at school.'
]
-- parser flat (FLAT mode, no callback) ---------
test result data:  [
  {
    lineNumber: 1,
    lineType: 'line',
    state: 'outOfBlock',
    data: 'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb'
  },
  {
    lineNumber: 2,
    lineType: 'line',
    state: 'outOfBlock',
    data: 'Mary had a little lamb,'
  },
  {
    lineNumber: 3,
    lineType: 'startTag',
    state: 'inBlock',
    data: ' /*'
  },
  {
    lineNumber: 4,
    lineType: 'line',
    state: 'inBlock',
    data: '--  Its fleece was white as snow,'
  },
  {
    lineNumber: 5,
    lineType: 'line',
    state: 'inBlock',
    data: '--And every where that Mary went'
  },
  { lineNumber: 6, lineType: 'endTag', state: 'inBlock', data: '*/  ' },
  {
    lineNumber: 7,
    lineType: 'line',
    state: 'outOfBlock',
    data: '   The lamb was sure to go ;'
  },
  {
    lineNumber: 8,
    lineType: 'line',
    state: 'outOfBlock',
    data: 'He followed her to school one day-'
  },
  {
    lineNumber: 9,
    lineType: 'startTag',
    state: 'inBlock',
    data: ' /* '
  },
  {
    lineNumber: 10,
    lineType: 'line',
    state: 'inBlock',
    data: '--   That was against the rule,'
  },
  { lineNumber: 11, lineType: 'endTag', state: 'inBlock', data: '*/' },
  {
    lineNumber: 12,
    lineType: 'line',
    state: 'outOfBlock',
    data: 'It made the children laugh and play,'
  },
  {
    lineNumber: 13,
    lineType: 'line',
    state: 'outOfBlock',
    data: '   To see a lamb at school.'
  }
]
-- parser grouped (GROUPED mode, no callback) ---------
test result data:  [
  {
    state: 'outOfBlock',
    startLineNumber: 1,
    startTagLine: null,
    endTagLine: null,
    data: [
      'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
      'Mary had a little lamb,'
    ]
  },
  {
    state: 'inBlock',
    startLineNumber: 4,
    startTagLine: ' /*',
    endTagLine: '*/  ',
    data: [
      '--  Its fleece was white as snow,',
      '--And every where that Mary went'
    ]
  },
  {
    state: 'outOfBlock',
    startLineNumber: 7,
    startTagLine: null,
    endTagLine: null,
    data: [
      '   The lamb was sure to go ;',
      'He followed her to school one day-'
    ]
  },
  {
    state: 'inBlock',
    startLineNumber: 10,
    startTagLine: ' /* ',
    endTagLine: '*/',
    data: [ '--   That was against the rule,' ]
  },
  {
    state: 'outOfBlock',
    startLineNumber: 12,
    startTagLine: null,
    endTagLine: null,
    data: [
      'It made the children laugh and play,',
      '   To see a lamb at school.'
    ]
  }
]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
-- parser flat (FLAT mode, callback no return) ---------
- - - - - - data:  {
  lineNumber: 1,
  lineType: 'line',
  state: 'outOfBlock',
  data: 'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb'
}
- - - - - - data:  {
  lineNumber: 2,
  lineType: 'line',
  state: 'outOfBlock',
  data: 'Mary had a little lamb,'
}
- - - - - - data:  { lineNumber: 3, lineType: 'startTag', state: 'inBlock', data: ' /*' }
- - - - - - data:  {
  lineNumber: 4,
  lineType: 'line',
  state: 'inBlock',
  data: '--  Its fleece was white as snow,'
}
- - - - - - data:  {
  lineNumber: 5,
  lineType: 'line',
  state: 'inBlock',
  data: '--And every where that Mary went'
}
- - - - - - data:  { lineNumber: 6, lineType: 'endTag', state: 'inBlock', data: '*/  ' }
- - - - - - data:  {
  lineNumber: 7,
  lineType: 'line',
  state: 'outOfBlock',
  data: '   The lamb was sure to go ;'
}
- - - - - - data:  {
  lineNumber: 8,
  lineType: 'line',
  state: 'outOfBlock',
  data: 'He followed her to school one day-'
}
- - - - - - data:  { lineNumber: 9, lineType: 'startTag', state: 'inBlock', data: ' /* ' }
- - - - - - data:  {
  lineNumber: 10,
  lineType: 'line',
  state: 'inBlock',
  data: '--   That was against the rule,'
}
- - - - - - data:  { lineNumber: 11, lineType: 'endTag', state: 'inBlock', data: '*/' }
- - - - - - data:  {
  lineNumber: 12,
  lineType: 'line',
  state: 'outOfBlock',
  data: 'It made the children laugh and play,'
}
- - - - - - data:  {
  lineNumber: 13,
  lineType: 'line',
  state: 'outOfBlock',
  data: '   To see a lamb at school.'
}
test result data:  []
-- parser grouped (GROUPED mode, callback no return) ---------
- - - - - - data:  {
  state: 'outOfBlock',
  startLineNumber: 1,
  startTagLine: null,
  endTagLine: null,
  data: [
    'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
    'Mary had a little lamb,'
  ]
}
- - - - - - data:  {
  state: 'inBlock',
  startLineNumber: 4,
  startTagLine: ' /*',
  endTagLine: '*/  ',
  data: [
    '--  Its fleece was white as snow,',
    '--And every where that Mary went'
  ]
}
- - - - - - data:  {
  state: 'outOfBlock',
  startLineNumber: 7,
  startTagLine: null,
  endTagLine: null,
  data: [
    '   The lamb was sure to go ;',
    'He followed her to school one day-'
  ]
}
- - - - - - data:  {
  state: 'inBlock',
  startLineNumber: 10,
  startTagLine: ' /* ',
  endTagLine: '*/',
  data: [ '--   That was against the rule,' ]
}
- - - - - - data:  {
  state: 'outOfBlock',
  startLineNumber: 12,
  startTagLine: null,
  endTagLine: null,
  data: [
    'It made the children laugh and play,',
    '   To see a lamb at school.'
  ]
}
test result data:  []
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
-- parser flat (FLAT mode, callback return) ---------
. . . . data:  {
  lineNumber: 1,
  lineType: 'line',
  state: 'outOfBlock',
  data: 'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb'
}
belongsToBlock false
. . . . data:  {
  lineNumber: 2,
  lineType: 'line',
  state: 'outOfBlock',
  data: 'Mary had a little lamb,'
}
belongsToBlock false
. . . . data:  { lineNumber: 3, lineType: 'startTag', state: 'inBlock', data: ' /*' }
belongsToBlock true
. . . . data:  {
  lineNumber: 4,
  lineType: 'line',
  state: 'inBlock',
  data: '--  Its fleece was white as snow,'
}
belongsToBlock true
. . . . data:  {
  lineNumber: 5,
  lineType: 'line',
  state: 'inBlock',
  data: '--And every where that Mary went'
}
belongsToBlock true
. . . . data:  { lineNumber: 6, lineType: 'endTag', state: 'inBlock', data: '*/  ' }
belongsToBlock true
. . . . data:  {
  lineNumber: 7,
  lineType: 'line',
  state: 'outOfBlock',
  data: '   The lamb was sure to go ;'
}
belongsToBlock false
. . . . data:  {
  lineNumber: 8,
  lineType: 'line',
  state: 'outOfBlock',
  data: 'He followed her to school one day-'
}
belongsToBlock false
. . . . data:  { lineNumber: 9, lineType: 'startTag', state: 'inBlock', data: ' /* ' }
belongsToBlock true
. . . . data:  {
  lineNumber: 10,
  lineType: 'line',
  state: 'inBlock',
  data: '--   That was against the rule,'
}
belongsToBlock true
. . . . data:  { lineNumber: 11, lineType: 'endTag', state: 'inBlock', data: '*/' }
belongsToBlock true
. . . . data:  {
  lineNumber: 12,
  lineType: 'line',
  state: 'outOfBlock',
  data: 'It made the children laugh and play,'
}
belongsToBlock false
. . . . data:  {
  lineNumber: 13,
  lineType: 'line',
  state: 'outOfBlock',
  data: '   To see a lamb at school.'
}
belongsToBlock false
test result: data  [
  'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
  'Mary had a little lamb,',
  ' /*',
  '--  Its fleece was white as snow,',
  '--And every where that Mary went',
  '*/  ',
  '   The lamb was sure to go ;',
  'He followed her to school one day-',
  ' /* ',
  '--   That was against the rule,',
  '*/',
  'It made the children laugh and play,',
  '   To see a lamb at school.'
]
-- parser grouped (GROUPED mode, callback return) ---------
. . . . data:  {
  state: 'outOfBlock',
  startLineNumber: 1,
  startTagLine: null,
  endTagLine: null,
  data: [
    'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
    'Mary had a little lamb,'
  ]
}
belongsToBlock false
. . . . data:  {
  state: 'inBlock',
  startLineNumber: 4,
  startTagLine: ' /*',
  endTagLine: '*/  ',
  data: [
    '--  Its fleece was white as snow,',
    '--And every where that Mary went'
  ]
}
belongsToBlock true
. . . . data:  {
  state: 'outOfBlock',
  startLineNumber: 7,
  startTagLine: null,
  endTagLine: null,
  data: [
    '   The lamb was sure to go ;',
    'He followed her to school one day-'
  ]
}
belongsToBlock false
. . . . data:  {
  state: 'inBlock',
  startLineNumber: 10,
  startTagLine: ' /* ',
  endTagLine: '*/',
  data: [ '--   That was against the rule,' ]
}
belongsToBlock true
. . . . data:  {
  state: 'outOfBlock',
  startLineNumber: 12,
  startTagLine: null,
  endTagLine: null,
  data: [
    'It made the children laugh and play,',
    '   To see a lamb at school.'
  ]
}
belongsToBlock false
test result data:  [
  [
    'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
    'Mary had a little lamb,'
  ],
  [
    '--  Its fleece was white as snow,',
    '--And every where that Mary went'
  ],
  [
    '   The lamb was sure to go ;',
    'He followed her to school one day-'
  ],
  [ '--   That was against the rule,' ],
  [
    'It made the children laugh and play,',
    '   To see a lamb at school.'
  ]
]

  = =  EDGE CASES  = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
  
== lines (emptyLines) ===============================================================================
 []
--(emptyLines) -- parser flat (FLAT mode, no callback) ---------
test result data:  []
test result errors:  []
--(emptyLines) -- parser grouped (GROUPED mode, no callback) ---------
test result data:  []
test result errors:  []
--(emptyLines) -- parser grouped custom error (GROUPED mode, custom error callback) ---------
test result data:  []
test result errors:  []
--(emptyLines) -- parser grouped null error (GROUPED mode, nothing-returning error callback) ---------
test result data:  []
test result errors:  []
== lines (no comment) ===============================================================================
 [
  'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
  'Mary had a little lamb,',
  '   The lamb was sure to go ;',
  'He followed her to school one day-'
]
--(no comment) -- parser flat (FLAT mode, no callback) ---------
test result data:  [
  {
    lineNumber: 1,
    lineType: 'line',
    state: 'outOfBlock',
    data: 'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb'
  },
  {
    lineNumber: 2,
    lineType: 'line',
    state: 'outOfBlock',
    data: 'Mary had a little lamb,'
  },
  {
    lineNumber: 3,
    lineType: 'line',
    state: 'outOfBlock',
    data: '   The lamb was sure to go ;'
  },
  {
    lineNumber: 4,
    lineType: 'line',
    state: 'outOfBlock',
    data: 'He followed her to school one day-'
  }
]
test result errors:  []
--(no comment) -- parser grouped (GROUPED mode, no callback) ---------
test result data:  [
  {
    state: 'outOfBlock',
    startLineNumber: 1,
    startTagLine: null,
    endTagLine: null,
    data: [
      'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
      'Mary had a little lamb,',
      '   The lamb was sure to go ;',
      'He followed her to school one day-'
    ]
  }
]
test result errors:  []
--(no comment) -- parser grouped custom error (GROUPED mode, custom error callback) ---------
test result data:  [
  {
    state: 'outOfBlock',
    startLineNumber: 1,
    startTagLine: null,
    endTagLine: null,
    data: [
      'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
      'Mary had a little lamb,',
      '   The lamb was sure to go ;',
      'He followed her to school one day-'
    ]
  }
]
test result errors:  []
--(no comment) -- parser grouped null error (GROUPED mode, nothing-returning error callback) ---------
test result data:  [
  {
    state: 'outOfBlock',
    startLineNumber: 1,
    startTagLine: null,
    endTagLine: null,
    data: [
      'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
      'Mary had a little lamb,',
      '   The lamb was sure to go ;',
      'He followed her to school one day-'
    ]
  }
]
test result errors:  []
== lines (whole comment) ===============================================================================
 [
  '  /* ',
  'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
  'Mary had a little lamb,',
  '   The lamb was sure to go ;',
  'He followed her to school one day-',
  '   */    '
]
--(whole comment) -- parser flat (FLAT mode, no callback) ---------
test result data:  [
  {
    lineNumber: 1,
    lineType: 'startTag',
    state: 'inBlock',
    data: '  /* '
  },
  {
    lineNumber: 2,
    lineType: 'line',
    state: 'inBlock',
    data: 'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb'
  },
  {
    lineNumber: 3,
    lineType: 'line',
    state: 'inBlock',
    data: 'Mary had a little lamb,'
  },
  {
    lineNumber: 4,
    lineType: 'line',
    state: 'inBlock',
    data: '   The lamb was sure to go ;'
  },
  {
    lineNumber: 5,
    lineType: 'line',
    state: 'inBlock',
    data: 'He followed her to school one day-'
  },
  {
    lineNumber: 6,
    lineType: 'endTag',
    state: 'inBlock',
    data: '   */    '
  }
]
test result errors:  []
--(whole comment) -- parser grouped (GROUPED mode, no callback) ---------
test result data:  [
  {
    state: 'inBlock',
    startLineNumber: 2,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: [
      'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
      'Mary had a little lamb,',
      '   The lamb was sure to go ;',
      'He followed her to school one day-'
    ]
  }
]
test result errors:  []
--(whole comment) -- parser grouped custom error (GROUPED mode, custom error callback) ---------
test result data:  [
  {
    state: 'inBlock',
    startLineNumber: 2,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: [
      'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
      'Mary had a little lamb,',
      '   The lamb was sure to go ;',
      'He followed her to school one day-'
    ]
  }
]
test result errors:  []
--(whole comment) -- parser grouped null error (GROUPED mode, nothing-returning error callback) ---------
test result data:  [
  {
    state: 'inBlock',
    startLineNumber: 2,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: [
      'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
      'Mary had a little lamb,',
      '   The lamb was sure to go ;',
      'He followed her to school one day-'
    ]
  }
]
test result errors:  []
== lines (consecutiveComments) ===============================================================================
 [
  '  /* ',
  'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
  'Mary had a little lamb,',
  '   */    ',
  '  /* ',
  '   The lamb was sure to go ;',
  '   */    ',
  'He followed her to school one day-'
]
--(consecutiveComments) -- parser flat (FLAT mode, no callback) ---------
test result data:  [
  {
    lineNumber: 1,
    lineType: 'startTag',
    state: 'inBlock',
    data: '  /* '
  },
  {
    lineNumber: 2,
    lineType: 'line',
    state: 'inBlock',
    data: 'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb'
  },
  {
    lineNumber: 3,
    lineType: 'line',
    state: 'inBlock',
    data: 'Mary had a little lamb,'
  },
  {
    lineNumber: 4,
    lineType: 'endTag',
    state: 'inBlock',
    data: '   */    '
  },
  {
    lineNumber: 5,
    lineType: 'startTag',
    state: 'inBlock',
    data: '  /* '
  },
  {
    lineNumber: 6,
    lineType: 'line',
    state: 'inBlock',
    data: '   The lamb was sure to go ;'
  },
  {
    lineNumber: 7,
    lineType: 'endTag',
    state: 'inBlock',
    data: '   */    '
  },
  {
    lineNumber: 8,
    lineType: 'line',
    state: 'outOfBlock',
    data: 'He followed her to school one day-'
  }
]
test result errors:  []
--(consecutiveComments) -- parser grouped (GROUPED mode, no callback) ---------
test result data:  [
  {
    state: 'inBlock',
    startLineNumber: 2,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: [
      'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
      'Mary had a little lamb,'
    ]
  },
  {
    state: 'inBlock',
    startLineNumber: 6,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: [ '   The lamb was sure to go ;' ]
  },
  {
    state: 'outOfBlock',
    startLineNumber: 8,
    startTagLine: null,
    endTagLine: null,
    data: [ 'He followed her to school one day-' ]
  }
]
test result errors:  []
--(consecutiveComments) -- parser grouped custom error (GROUPED mode, custom error callback) ---------
test result data:  [
  {
    state: 'inBlock',
    startLineNumber: 2,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: [
      'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
      'Mary had a little lamb,'
    ]
  },
  {
    state: 'inBlock',
    startLineNumber: 6,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: [ '   The lamb was sure to go ;' ]
  },
  {
    state: 'outOfBlock',
    startLineNumber: 8,
    startTagLine: null,
    endTagLine: null,
    data: [ 'He followed her to school one day-' ]
  }
]
test result errors:  []
--(consecutiveComments) -- parser grouped null error (GROUPED mode, nothing-returning error callback) ---------
test result data:  [
  {
    state: 'inBlock',
    startLineNumber: 2,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: [
      'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
      'Mary had a little lamb,'
    ]
  },
  {
    state: 'inBlock',
    startLineNumber: 6,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: [ '   The lamb was sure to go ;' ]
  },
  {
    state: 'outOfBlock',
    startLineNumber: 8,
    startTagLine: null,
    endTagLine: null,
    data: [ 'He followed her to school one day-' ]
  }
]
test result errors:  []
== lines (empty comment) ===============================================================================
 [
  'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
  'Mary had a little lamb,',
  '  /* ',
  '   */    ',
  '   The lamb was sure to go ;'
]
--(empty comment) -- parser flat (FLAT mode, no callback) ---------
test result data:  [
  {
    lineNumber: 1,
    lineType: 'line',
    state: 'outOfBlock',
    data: 'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb'
  },
  {
    lineNumber: 2,
    lineType: 'line',
    state: 'outOfBlock',
    data: 'Mary had a little lamb,'
  },
  {
    lineNumber: 3,
    lineType: 'startTag',
    state: 'inBlock',
    data: '  /* '
  },
  {
    lineNumber: 4,
    lineType: 'endTag',
    state: 'inBlock',
    data: '   */    '
  },
  {
    lineNumber: 5,
    lineType: 'line',
    state: 'outOfBlock',
    data: '   The lamb was sure to go ;'
  }
]
test result errors:  []
--(empty comment) -- parser grouped (GROUPED mode, no callback) ---------
test result data:  [
  {
    state: 'outOfBlock',
    startLineNumber: 1,
    startTagLine: null,
    endTagLine: null,
    data: [
      'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
      'Mary had a little lamb,'
    ]
  },
  {
    state: 'inBlock',
    startLineNumber: 4,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: []
  },
  {
    state: 'outOfBlock',
    startLineNumber: 5,
    startTagLine: null,
    endTagLine: null,
    data: [ '   The lamb was sure to go ;' ]
  }
]
test result errors:  []
--(empty comment) -- parser grouped custom error (GROUPED mode, custom error callback) ---------
test result data:  [
  {
    state: 'outOfBlock',
    startLineNumber: 1,
    startTagLine: null,
    endTagLine: null,
    data: [
      'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
      'Mary had a little lamb,'
    ]
  },
  {
    state: 'inBlock',
    startLineNumber: 4,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: []
  },
  {
    state: 'outOfBlock',
    startLineNumber: 5,
    startTagLine: null,
    endTagLine: null,
    data: [ '   The lamb was sure to go ;' ]
  }
]
test result errors:  []
--(empty comment) -- parser grouped null error (GROUPED mode, nothing-returning error callback) ---------
test result data:  [
  {
    state: 'outOfBlock',
    startLineNumber: 1,
    startTagLine: null,
    endTagLine: null,
    data: [
      'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
      'Mary had a little lamb,'
    ]
  },
  {
    state: 'inBlock',
    startLineNumber: 4,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: []
  },
  {
    state: 'outOfBlock',
    startLineNumber: 5,
    startTagLine: null,
    endTagLine: null,
    data: [ '   The lamb was sure to go ;' ]
  }
]
test result errors:  []
== lines (multiple empty comment) ===============================================================================
 [
  '  /* ',
  '   */    ',
  'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
  'Mary had a little lamb,',
  '  /* ',
  '   */    ',
  '   The lamb was sure to go ;',
  'He followed her to school one day-'
]
--(multiple empty comment) -- parser flat (FLAT mode, no callback) ---------
test result data:  [
  {
    lineNumber: 1,
    lineType: 'startTag',
    state: 'inBlock',
    data: '  /* '
  },
  {
    lineNumber: 2,
    lineType: 'endTag',
    state: 'inBlock',
    data: '   */    '
  },
  {
    lineNumber: 3,
    lineType: 'line',
    state: 'outOfBlock',
    data: 'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb'
  },
  {
    lineNumber: 4,
    lineType: 'line',
    state: 'outOfBlock',
    data: 'Mary had a little lamb,'
  },
  {
    lineNumber: 5,
    lineType: 'startTag',
    state: 'inBlock',
    data: '  /* '
  },
  {
    lineNumber: 6,
    lineType: 'endTag',
    state: 'inBlock',
    data: '   */    '
  },
  {
    lineNumber: 7,
    lineType: 'line',
    state: 'outOfBlock',
    data: '   The lamb was sure to go ;'
  },
  {
    lineNumber: 8,
    lineType: 'line',
    state: 'outOfBlock',
    data: 'He followed her to school one day-'
  }
]
test result errors:  []
--(multiple empty comment) -- parser grouped (GROUPED mode, no callback) ---------
test result data:  [
  {
    state: 'inBlock',
    startLineNumber: 2,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: []
  },
  {
    state: 'outOfBlock',
    startLineNumber: 3,
    startTagLine: null,
    endTagLine: null,
    data: [
      'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
      'Mary had a little lamb,'
    ]
  },
  {
    state: 'inBlock',
    startLineNumber: 6,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: []
  },
  {
    state: 'outOfBlock',
    startLineNumber: 7,
    startTagLine: null,
    endTagLine: null,
    data: [
      '   The lamb was sure to go ;',
      'He followed her to school one day-'
    ]
  }
]
test result errors:  []
--(multiple empty comment) -- parser grouped custom error (GROUPED mode, custom error callback) ---------
test result data:  [
  {
    state: 'inBlock',
    startLineNumber: 2,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: []
  },
  {
    state: 'outOfBlock',
    startLineNumber: 3,
    startTagLine: null,
    endTagLine: null,
    data: [
      'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
      'Mary had a little lamb,'
    ]
  },
  {
    state: 'inBlock',
    startLineNumber: 6,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: []
  },
  {
    state: 'outOfBlock',
    startLineNumber: 7,
    startTagLine: null,
    endTagLine: null,
    data: [
      '   The lamb was sure to go ;',
      'He followed her to school one day-'
    ]
  }
]
test result errors:  []
--(multiple empty comment) -- parser grouped null error (GROUPED mode, nothing-returning error callback) ---------
test result data:  [
  {
    state: 'inBlock',
    startLineNumber: 2,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: []
  },
  {
    state: 'outOfBlock',
    startLineNumber: 3,
    startTagLine: null,
    endTagLine: null,
    data: [
      'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
      'Mary had a little lamb,'
    ]
  },
  {
    state: 'inBlock',
    startLineNumber: 6,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: []
  },
  {
    state: 'outOfBlock',
    startLineNumber: 7,
    startTagLine: null,
    endTagLine: null,
    data: [
      '   The lamb was sure to go ;',
      'He followed her to school one day-'
    ]
  }
]
test result errors:  []
== lines (unclosed comment) ===============================================================================
 [
  '  /* ',
  'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
  'Mary had a little lamb,',
  '   */    ',
  '  /* ',
  '   The lamb was sure to go ;',
  'He followed her to school one day-'
]
--(unclosed comment) -- parser flat (FLAT mode, no callback) ---------
test result data:  [
  {
    lineNumber: 1,
    lineType: 'startTag',
    state: 'inBlock',
    data: '  /* '
  },
  {
    lineNumber: 2,
    lineType: 'line',
    state: 'inBlock',
    data: 'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb'
  },
  {
    lineNumber: 3,
    lineType: 'line',
    state: 'inBlock',
    data: 'Mary had a little lamb,'
  },
  {
    lineNumber: 4,
    lineType: 'endTag',
    state: 'inBlock',
    data: '   */    '
  },
  {
    lineNumber: 5,
    lineType: 'startTag',
    state: 'inBlock',
    data: '  /* '
  },
  {
    lineNumber: 6,
    lineType: 'line',
    state: 'inBlock',
    data: '   The lamb was sure to go ;'
  },
  {
    lineNumber: 7,
    lineType: 'line',
    state: 'inBlock',
    data: 'He followed her to school one day-'
  }
]
test result errors:  [
  {
    name: 'ParserError',
    message: 'Missing end-tag at the end of the final block',
    lineNumber: 7
  }
]
--(unclosed comment) -- parser grouped (GROUPED mode, no callback) ---------
test result data:  [
  {
    state: 'inBlock',
    startLineNumber: 2,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: [
      'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
      'Mary had a little lamb,'
    ]
  },
  {
    state: 'inBlock',
    startLineNumber: 6,
    startTagLine: '  /* ',
    endTagLine: null,
    data: [
      '   The lamb was sure to go ;',
      'He followed her to school one day-'
    ]
  }
]
test result errors:  [
  {
    name: 'ParserError',
    message: 'Missing end-tag at the end of the final block',
    lineNumber: 7
  }
]
--(unclosed comment) -- parser grouped custom error (GROUPED mode, custom error callback) ---------
test result data:  [
  {
    state: 'inBlock',
    startLineNumber: 2,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: [
      'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
      'Mary had a little lamb,'
    ]
  },
  {
    state: 'inBlock',
    startLineNumber: 6,
    startTagLine: '  /* ',
    endTagLine: null,
    data: [
      '   The lamb was sure to go ;',
      'He followed her to school one day-'
    ]
  }
]
test result errors:  [ 7 ]
--(unclosed comment) -- parser grouped null error (GROUPED mode, nothing-returning error callback) ---------
ERROR on line: 7
test result data:  [
  {
    state: 'inBlock',
    startLineNumber: 2,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: [
      'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
      'Mary had a little lamb,'
    ]
  },
  {
    state: 'inBlock',
    startLineNumber: 6,
    startTagLine: '  /* ',
    endTagLine: null,
    data: [
      '   The lamb was sure to go ;',
      'He followed her to school one day-'
    ]
  }
]
test result errors:  []
== lines (empty unclosed comment) ===============================================================================
 [
  '  /* ',
  'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
  'Mary had a little lamb,',
  '   */    ',
  '',
  '  /* '
]
--(empty unclosed comment) -- parser flat (FLAT mode, no callback) ---------
test result data:  [
  {
    lineNumber: 1,
    lineType: 'startTag',
    state: 'inBlock',
    data: '  /* '
  },
  {
    lineNumber: 2,
    lineType: 'line',
    state: 'inBlock',
    data: 'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb'
  },
  {
    lineNumber: 3,
    lineType: 'line',
    state: 'inBlock',
    data: 'Mary had a little lamb,'
  },
  {
    lineNumber: 4,
    lineType: 'endTag',
    state: 'inBlock',
    data: '   */    '
  },
  { lineNumber: 5, lineType: 'line', state: 'outOfBlock', data: '' },
  {
    lineNumber: 6,
    lineType: 'startTag',
    state: 'inBlock',
    data: '  /* '
  }
]
test result errors:  [
  {
    name: 'ParserError',
    message: 'Missing end-tag at the end of the final block',
    lineNumber: 6
  }
]
--(empty unclosed comment) -- parser grouped (GROUPED mode, no callback) ---------
test result data:  [
  {
    state: 'inBlock',
    startLineNumber: 2,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: [
      'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
      'Mary had a little lamb,'
    ]
  },
  {
    state: 'outOfBlock',
    startLineNumber: 5,
    startTagLine: null,
    endTagLine: null,
    data: [ '' ]
  },
  {
    state: 'inBlock',
    startLineNumber: 7,
    startTagLine: '  /* ',
    endTagLine: null,
    data: []
  }
]
test result errors:  [
  {
    name: 'ParserError',
    message: 'Missing end-tag at the end of the final block',
    lineNumber: 6
  }
]
--(empty unclosed comment) -- parser grouped custom error (GROUPED mode, custom error callback) ---------
test result data:  [
  {
    state: 'inBlock',
    startLineNumber: 2,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: [
      'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
      'Mary had a little lamb,'
    ]
  },
  {
    state: 'outOfBlock',
    startLineNumber: 5,
    startTagLine: null,
    endTagLine: null,
    data: [ '' ]
  },
  {
    state: 'inBlock',
    startLineNumber: 7,
    startTagLine: '  /* ',
    endTagLine: null,
    data: []
  }
]
test result errors:  [ 6 ]
--(empty unclosed comment) -- parser grouped null error (GROUPED mode, nothing-returning error callback) ---------
ERROR on line: 6
test result data:  [
  {
    state: 'inBlock',
    startLineNumber: 2,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: [
      'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
      'Mary had a little lamb,'
    ]
  },
  {
    state: 'outOfBlock',
    startLineNumber: 5,
    startTagLine: null,
    endTagLine: null,
    data: [ '' ]
  },
  {
    state: 'inBlock',
    startLineNumber: 7,
    startTagLine: '  /* ',
    endTagLine: null,
    data: []
  }
]
test result errors:  []
== lines (repeated startTag) ===============================================================================
 [
  '  /* ',
  'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
  '/*',
  'Mary had a little lamb,',
  '   The lamb was sure to go ;',
  'He followed her to school one day-',
  '   */    '
]
--(repeated startTag) -- parser flat (FLAT mode, no callback) ---------
test result data:  [
  {
    lineNumber: 1,
    lineType: 'startTag',
    state: 'inBlock',
    data: '  /* '
  },
  {
    lineNumber: 2,
    lineType: 'line',
    state: 'inBlock',
    data: 'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb'
  },
  { lineNumber: 3, lineType: 'startTag', state: 'inBlock', data: '/*' },
  {
    lineNumber: 4,
    lineType: 'line',
    state: 'inBlock',
    data: 'Mary had a little lamb,'
  },
  {
    lineNumber: 5,
    lineType: 'line',
    state: 'inBlock',
    data: '   The lamb was sure to go ;'
  },
  {
    lineNumber: 6,
    lineType: 'line',
    state: 'inBlock',
    data: 'He followed her to school one day-'
  },
  {
    lineNumber: 7,
    lineType: 'endTag',
    state: 'inBlock',
    data: '   */    '
  }
]
test result errors:  [
  {
    name: 'ParserError',
    message: 'Repeated start-tag. No previous matching end-tag found',
    lineNumber: 3
  }
]
--(repeated startTag) -- parser grouped (GROUPED mode, no callback) ---------
test result data:  [
  {
    state: 'inBlock',
    startLineNumber: 2,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: [
      'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
      '/*',
      'Mary had a little lamb,',
      '   The lamb was sure to go ;',
      'He followed her to school one day-'
    ]
  }
]
test result errors:  [
  {
    name: 'ParserError',
    message: 'Repeated start-tag. No previous matching end-tag found',
    lineNumber: 3
  }
]
--(repeated startTag) -- parser grouped custom error (GROUPED mode, custom error callback) ---------
test result data:  [
  {
    state: 'inBlock',
    startLineNumber: 2,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: [
      'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
      '/*',
      'Mary had a little lamb,',
      '   The lamb was sure to go ;',
      'He followed her to school one day-'
    ]
  }
]
test result errors:  [ 3 ]
--(repeated startTag) -- parser grouped null error (GROUPED mode, nothing-returning error callback) ---------
ERROR on line: 3
test result data:  [
  {
    state: 'inBlock',
    startLineNumber: 2,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: [
      'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
      '/*',
      'Mary had a little lamb,',
      '   The lamb was sure to go ;',
      'He followed her to school one day-'
    ]
  }
]
test result errors:  []
== lines (consecutive startTag) ===============================================================================
 [
  'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
  'Mary had a little lamb,',
  '   The lamb was sure to go ;',
  '/*',
  ' /*',
  'He followed her to school one day-',
  '   */    '
]
--(consecutive startTag) -- parser flat (FLAT mode, no callback) ---------
test result data:  [
  {
    lineNumber: 1,
    lineType: 'line',
    state: 'outOfBlock',
    data: 'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb'
  },
  {
    lineNumber: 2,
    lineType: 'line',
    state: 'outOfBlock',
    data: 'Mary had a little lamb,'
  },
  {
    lineNumber: 3,
    lineType: 'line',
    state: 'outOfBlock',
    data: '   The lamb was sure to go ;'
  },
  { lineNumber: 4, lineType: 'startTag', state: 'inBlock', data: '/*' },
  {
    lineNumber: 5,
    lineType: 'startTag',
    state: 'inBlock',
    data: ' /*'
  },
  {
    lineNumber: 6,
    lineType: 'line',
    state: 'inBlock',
    data: 'He followed her to school one day-'
  },
  {
    lineNumber: 7,
    lineType: 'endTag',
    state: 'inBlock',
    data: '   */    '
  }
]
test result errors:  [
  {
    name: 'ParserError',
    message: 'Repeated start-tag. No previous matching end-tag found',
    lineNumber: 5
  }
]
--(consecutive startTag) -- parser grouped (GROUPED mode, no callback) ---------
test result data:  [
  {
    state: 'outOfBlock',
    startLineNumber: 1,
    startTagLine: null,
    endTagLine: null,
    data: [
      'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
      'Mary had a little lamb,',
      '   The lamb was sure to go ;'
    ]
  },
  {
    state: 'inBlock',
    startLineNumber: 5,
    startTagLine: '/*',
    endTagLine: '   */    ',
    data: [ ' /*', 'He followed her to school one day-' ]
  }
]
test result errors:  [
  {
    name: 'ParserError',
    message: 'Repeated start-tag. No previous matching end-tag found',
    lineNumber: 5
  }
]
--(consecutive startTag) -- parser grouped custom error (GROUPED mode, custom error callback) ---------
test result data:  [
  {
    state: 'outOfBlock',
    startLineNumber: 1,
    startTagLine: null,
    endTagLine: null,
    data: [
      'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
      'Mary had a little lamb,',
      '   The lamb was sure to go ;'
    ]
  },
  {
    state: 'inBlock',
    startLineNumber: 5,
    startTagLine: '/*',
    endTagLine: '   */    ',
    data: [ ' /*', 'He followed her to school one day-' ]
  }
]
test result errors:  [ 5 ]
--(consecutive startTag) -- parser grouped null error (GROUPED mode, nothing-returning error callback) ---------
ERROR on line: 5
test result data:  [
  {
    state: 'outOfBlock',
    startLineNumber: 1,
    startTagLine: null,
    endTagLine: null,
    data: [
      'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
      'Mary had a little lamb,',
      '   The lamb was sure to go ;'
    ]
  },
  {
    state: 'inBlock',
    startLineNumber: 5,
    startTagLine: '/*',
    endTagLine: '   */    ',
    data: [ ' /*', 'He followed her to school one day-' ]
  }
]
test result errors:  []
== lines (multiple repeated startTag) ===============================================================================
 [
  'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
  '/*',
  'Mary had a little lamb,',
  '/*',
  '   The lamb was sure to go ;',
  ' /*',
  'He followed her to school one day-',
  '   */    '
]
--(multiple repeated startTag) -- parser flat (FLAT mode, no callback) ---------
test result data:  [
  {
    lineNumber: 1,
    lineType: 'line',
    state: 'outOfBlock',
    data: 'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb'
  },
  { lineNumber: 2, lineType: 'startTag', state: 'inBlock', data: '/*' },
  {
    lineNumber: 3,
    lineType: 'line',
    state: 'inBlock',
    data: 'Mary had a little lamb,'
  },
  { lineNumber: 4, lineType: 'startTag', state: 'inBlock', data: '/*' },
  {
    lineNumber: 5,
    lineType: 'line',
    state: 'inBlock',
    data: '   The lamb was sure to go ;'
  },
  {
    lineNumber: 6,
    lineType: 'startTag',
    state: 'inBlock',
    data: ' /*'
  },
  {
    lineNumber: 7,
    lineType: 'line',
    state: 'inBlock',
    data: 'He followed her to school one day-'
  },
  {
    lineNumber: 8,
    lineType: 'endTag',
    state: 'inBlock',
    data: '   */    '
  }
]
test result errors:  [
  {
    name: 'ParserError',
    message: 'Repeated start-tag. No previous matching end-tag found',
    lineNumber: 4
  },
  {
    name: 'ParserError',
    message: 'Repeated start-tag. No previous matching end-tag found',
    lineNumber: 6
  }
]
--(multiple repeated startTag) -- parser grouped (GROUPED mode, no callback) ---------
test result data:  [
  {
    state: 'outOfBlock',
    startLineNumber: 1,
    startTagLine: null,
    endTagLine: null,
    data: [ 'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb' ]
  },
  {
    state: 'inBlock',
    startLineNumber: 3,
    startTagLine: '/*',
    endTagLine: '   */    ',
    data: [
      'Mary had a little lamb,',
      '/*',
      '   The lamb was sure to go ;',
      ' /*',
      'He followed her to school one day-'
    ]
  }
]
test result errors:  [
  {
    name: 'ParserError',
    message: 'Repeated start-tag. No previous matching end-tag found',
    lineNumber: 4
  },
  {
    name: 'ParserError',
    message: 'Repeated start-tag. No previous matching end-tag found',
    lineNumber: 6
  }
]
--(multiple repeated startTag) -- parser grouped custom error (GROUPED mode, custom error callback) ---------
test result data:  [
  {
    state: 'outOfBlock',
    startLineNumber: 1,
    startTagLine: null,
    endTagLine: null,
    data: [ 'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb' ]
  },
  {
    state: 'inBlock',
    startLineNumber: 3,
    startTagLine: '/*',
    endTagLine: '   */    ',
    data: [
      'Mary had a little lamb,',
      '/*',
      '   The lamb was sure to go ;',
      ' /*',
      'He followed her to school one day-'
    ]
  }
]
test result errors:  [ 4, 6 ]
--(multiple repeated startTag) -- parser grouped null error (GROUPED mode, nothing-returning error callback) ---------
ERROR on line: 4
ERROR on line: 6
test result data:  [
  {
    state: 'outOfBlock',
    startLineNumber: 1,
    startTagLine: null,
    endTagLine: null,
    data: [ 'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb' ]
  },
  {
    state: 'inBlock',
    startLineNumber: 3,
    startTagLine: '/*',
    endTagLine: '   */    ',
    data: [
      'Mary had a little lamb,',
      '/*',
      '   The lamb was sure to go ;',
      ' /*',
      'He followed her to school one day-'
    ]
  }
]
test result errors:  []
== lines (repeatedEndTag) ===============================================================================
 [
  '  /* ',
  'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
  ' */   ',
  'Mary had a little lamb,',
  '   */    ',
  '  /* ',
  '   The lamb was sure to go ;',
  '   */    ',
  'He followed her to school one day-'
]
--(repeatedEndTag) -- parser flat (FLAT mode, no callback) ---------
test result data:  [
  {
    lineNumber: 1,
    lineType: 'startTag',
    state: 'inBlock',
    data: '  /* '
  },
  {
    lineNumber: 2,
    lineType: 'line',
    state: 'inBlock',
    data: 'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb'
  },
  {
    lineNumber: 3,
    lineType: 'endTag',
    state: 'inBlock',
    data: ' */   '
  },
  {
    lineNumber: 4,
    lineType: 'line',
    state: 'outOfBlock',
    data: 'Mary had a little lamb,'
  },
  {
    lineNumber: 5,
    lineType: 'endTag',
    state: 'outOfBlock',
    data: '   */    '
  },
  {
    lineNumber: 6,
    lineType: 'startTag',
    state: 'inBlock',
    data: '  /* '
  },
  {
    lineNumber: 7,
    lineType: 'line',
    state: 'inBlock',
    data: '   The lamb was sure to go ;'
  },
  {
    lineNumber: 8,
    lineType: 'endTag',
    state: 'inBlock',
    data: '   */    '
  },
  {
    lineNumber: 9,
    lineType: 'line',
    state: 'outOfBlock',
    data: 'He followed her to school one day-'
  }
]
test result errors:  [
  {
    name: 'ParserError',
    message: 'Repeated end-tag. No previous matching start-tag found',
    lineNumber: 5
  }
]
--(repeatedEndTag) -- parser grouped (GROUPED mode, no callback) ---------
test result data:  [
  {
    state: 'inBlock',
    startLineNumber: 2,
    startTagLine: '  /* ',
    endTagLine: ' */   ',
    data: [ 'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb' ]
  },
  {
    state: 'outOfBlock',
    startLineNumber: 4,
    startTagLine: null,
    endTagLine: null,
    data: [ 'Mary had a little lamb,', '   */    ' ]
  },
  {
    state: 'inBlock',
    startLineNumber: 7,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: [ '   The lamb was sure to go ;' ]
  },
  {
    state: 'outOfBlock',
    startLineNumber: 9,
    startTagLine: null,
    endTagLine: null,
    data: [ 'He followed her to school one day-' ]
  }
]
test result errors:  [
  {
    name: 'ParserError',
    message: 'Repeated end-tag. No previous matching start-tag found',
    lineNumber: 5
  }
]
--(repeatedEndTag) -- parser grouped custom error (GROUPED mode, custom error callback) ---------
test result data:  [
  {
    state: 'inBlock',
    startLineNumber: 2,
    startTagLine: '  /* ',
    endTagLine: ' */   ',
    data: [ 'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb' ]
  },
  {
    state: 'outOfBlock',
    startLineNumber: 4,
    startTagLine: null,
    endTagLine: null,
    data: [ 'Mary had a little lamb,', '   */    ' ]
  },
  {
    state: 'inBlock',
    startLineNumber: 7,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: [ '   The lamb was sure to go ;' ]
  },
  {
    state: 'outOfBlock',
    startLineNumber: 9,
    startTagLine: null,
    endTagLine: null,
    data: [ 'He followed her to school one day-' ]
  }
]
test result errors:  [ 5 ]
--(repeatedEndTag) -- parser grouped null error (GROUPED mode, nothing-returning error callback) ---------
ERROR on line: 5
test result data:  [
  {
    state: 'inBlock',
    startLineNumber: 2,
    startTagLine: '  /* ',
    endTagLine: ' */   ',
    data: [ 'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb' ]
  },
  {
    state: 'outOfBlock',
    startLineNumber: 4,
    startTagLine: null,
    endTagLine: null,
    data: [ 'Mary had a little lamb,', '   */    ' ]
  },
  {
    state: 'inBlock',
    startLineNumber: 7,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: [ '   The lamb was sure to go ;' ]
  },
  {
    state: 'outOfBlock',
    startLineNumber: 9,
    startTagLine: null,
    endTagLine: null,
    data: [ 'He followed her to school one day-' ]
  }
]
test result errors:  []
== lines (consecutive EndTag) ===============================================================================
 [
  '  /* ',
  'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
  ' */   ',
  '   */    ',
  'Mary had a little lamb,',
  '  /* ',
  '   The lamb was sure to go ;',
  '   */    ',
  'He followed her to school one day-'
]
--(consecutive EndTag) -- parser flat (FLAT mode, no callback) ---------
test result data:  [
  {
    lineNumber: 1,
    lineType: 'startTag',
    state: 'inBlock',
    data: '  /* '
  },
  {
    lineNumber: 2,
    lineType: 'line',
    state: 'inBlock',
    data: 'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb'
  },
  {
    lineNumber: 3,
    lineType: 'endTag',
    state: 'inBlock',
    data: ' */   '
  },
  {
    lineNumber: 4,
    lineType: 'endTag',
    state: 'outOfBlock',
    data: '   */    '
  },
  {
    lineNumber: 5,
    lineType: 'line',
    state: 'outOfBlock',
    data: 'Mary had a little lamb,'
  },
  {
    lineNumber: 6,
    lineType: 'startTag',
    state: 'inBlock',
    data: '  /* '
  },
  {
    lineNumber: 7,
    lineType: 'line',
    state: 'inBlock',
    data: '   The lamb was sure to go ;'
  },
  {
    lineNumber: 8,
    lineType: 'endTag',
    state: 'inBlock',
    data: '   */    '
  },
  {
    lineNumber: 9,
    lineType: 'line',
    state: 'outOfBlock',
    data: 'He followed her to school one day-'
  }
]
test result errors:  [
  {
    name: 'ParserError',
    message: 'Repeated end-tag. No previous matching start-tag found',
    lineNumber: 4
  }
]
--(consecutive EndTag) -- parser grouped (GROUPED mode, no callback) ---------
test result data:  [
  {
    state: 'inBlock',
    startLineNumber: 2,
    startTagLine: '  /* ',
    endTagLine: ' */   ',
    data: [ 'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb' ]
  },
  {
    state: 'outOfBlock',
    startLineNumber: 4,
    startTagLine: null,
    endTagLine: null,
    data: [ '   */    ', 'Mary had a little lamb,' ]
  },
  {
    state: 'inBlock',
    startLineNumber: 7,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: [ '   The lamb was sure to go ;' ]
  },
  {
    state: 'outOfBlock',
    startLineNumber: 9,
    startTagLine: null,
    endTagLine: null,
    data: [ 'He followed her to school one day-' ]
  }
]
test result errors:  [
  {
    name: 'ParserError',
    message: 'Repeated end-tag. No previous matching start-tag found',
    lineNumber: 4
  }
]
--(consecutive EndTag) -- parser grouped custom error (GROUPED mode, custom error callback) ---------
test result data:  [
  {
    state: 'inBlock',
    startLineNumber: 2,
    startTagLine: '  /* ',
    endTagLine: ' */   ',
    data: [ 'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb' ]
  },
  {
    state: 'outOfBlock',
    startLineNumber: 4,
    startTagLine: null,
    endTagLine: null,
    data: [ '   */    ', 'Mary had a little lamb,' ]
  },
  {
    state: 'inBlock',
    startLineNumber: 7,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: [ '   The lamb was sure to go ;' ]
  },
  {
    state: 'outOfBlock',
    startLineNumber: 9,
    startTagLine: null,
    endTagLine: null,
    data: [ 'He followed her to school one day-' ]
  }
]
test result errors:  [ 4 ]
--(consecutive EndTag) -- parser grouped null error (GROUPED mode, nothing-returning error callback) ---------
ERROR on line: 4
test result data:  [
  {
    state: 'inBlock',
    startLineNumber: 2,
    startTagLine: '  /* ',
    endTagLine: ' */   ',
    data: [ 'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb' ]
  },
  {
    state: 'outOfBlock',
    startLineNumber: 4,
    startTagLine: null,
    endTagLine: null,
    data: [ '   */    ', 'Mary had a little lamb,' ]
  },
  {
    state: 'inBlock',
    startLineNumber: 7,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: [ '   The lamb was sure to go ;' ]
  },
  {
    state: 'outOfBlock',
    startLineNumber: 9,
    startTagLine: null,
    endTagLine: null,
    data: [ 'He followed her to school one day-' ]
  }
]
test result errors:  []
== lines (multiple EndTag) ===============================================================================
 [
  '  /* ',
  'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
  ' */   ',
  '   */    ',
  'Mary had a little lamb,',
  '  /* ',
  '   The lamb was sure to go ;',
  '   */    ',
  'He followed her to school one day-',
  '*/'
]
--(multiple EndTag) -- parser flat (FLAT mode, no callback) ---------
test result data:  [
  {
    lineNumber: 1,
    lineType: 'startTag',
    state: 'inBlock',
    data: '  /* '
  },
  {
    lineNumber: 2,
    lineType: 'line',
    state: 'inBlock',
    data: 'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb'
  },
  {
    lineNumber: 3,
    lineType: 'endTag',
    state: 'inBlock',
    data: ' */   '
  },
  {
    lineNumber: 4,
    lineType: 'endTag',
    state: 'outOfBlock',
    data: '   */    '
  },
  {
    lineNumber: 5,
    lineType: 'line',
    state: 'outOfBlock',
    data: 'Mary had a little lamb,'
  },
  {
    lineNumber: 6,
    lineType: 'startTag',
    state: 'inBlock',
    data: '  /* '
  },
  {
    lineNumber: 7,
    lineType: 'line',
    state: 'inBlock',
    data: '   The lamb was sure to go ;'
  },
  {
    lineNumber: 8,
    lineType: 'endTag',
    state: 'inBlock',
    data: '   */    '
  },
  {
    lineNumber: 9,
    lineType: 'line',
    state: 'outOfBlock',
    data: 'He followed her to school one day-'
  },
  {
    lineNumber: 10,
    lineType: 'endTag',
    state: 'outOfBlock',
    data: '*/'
  }
]
test result errors:  [
  {
    name: 'ParserError',
    message: 'Repeated end-tag. No previous matching start-tag found',
    lineNumber: 4
  },
  {
    name: 'ParserError',
    message: 'Repeated end-tag. No previous matching start-tag found',
    lineNumber: 10
  }
]
--(multiple EndTag) -- parser grouped (GROUPED mode, no callback) ---------
test result data:  [
  {
    state: 'inBlock',
    startLineNumber: 2,
    startTagLine: '  /* ',
    endTagLine: ' */   ',
    data: [ 'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb' ]
  },
  {
    state: 'outOfBlock',
    startLineNumber: 4,
    startTagLine: null,
    endTagLine: null,
    data: [ '   */    ', 'Mary had a little lamb,' ]
  },
  {
    state: 'inBlock',
    startLineNumber: 7,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: [ '   The lamb was sure to go ;' ]
  },
  {
    state: 'outOfBlock',
    startLineNumber: 9,
    startTagLine: null,
    endTagLine: null,
    data: [ 'He followed her to school one day-', '*/' ]
  }
]
test result errors:  [
  {
    name: 'ParserError',
    message: 'Repeated end-tag. No previous matching start-tag found',
    lineNumber: 4
  },
  {
    name: 'ParserError',
    message: 'Repeated end-tag. No previous matching start-tag found',
    lineNumber: 10
  }
]
--(multiple EndTag) -- parser grouped custom error (GROUPED mode, custom error callback) ---------
test result data:  [
  {
    state: 'inBlock',
    startLineNumber: 2,
    startTagLine: '  /* ',
    endTagLine: ' */   ',
    data: [ 'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb' ]
  },
  {
    state: 'outOfBlock',
    startLineNumber: 4,
    startTagLine: null,
    endTagLine: null,
    data: [ '   */    ', 'Mary had a little lamb,' ]
  },
  {
    state: 'inBlock',
    startLineNumber: 7,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: [ '   The lamb was sure to go ;' ]
  },
  {
    state: 'outOfBlock',
    startLineNumber: 9,
    startTagLine: null,
    endTagLine: null,
    data: [ 'He followed her to school one day-', '*/' ]
  }
]
test result errors:  [ 4, 10 ]
--(multiple EndTag) -- parser grouped null error (GROUPED mode, nothing-returning error callback) ---------
ERROR on line: 4
ERROR on line: 10
test result data:  [
  {
    state: 'inBlock',
    startLineNumber: 2,
    startTagLine: '  /* ',
    endTagLine: ' */   ',
    data: [ 'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb' ]
  },
  {
    state: 'outOfBlock',
    startLineNumber: 4,
    startTagLine: null,
    endTagLine: null,
    data: [ '   */    ', 'Mary had a little lamb,' ]
  },
  {
    state: 'inBlock',
    startLineNumber: 7,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: [ '   The lamb was sure to go ;' ]
  },
  {
    state: 'outOfBlock',
    startLineNumber: 9,
    startTagLine: null,
    endTagLine: null,
    data: [ 'He followed her to school one day-', '*/' ]
  }
]
test result errors:  []
== lines (EndTag at the beginning) ===============================================================================
 [
  ' */ ',
  'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
  'Mary had a little lamb,',
  '  /* ',
  '   The lamb was sure to go ;',
  '   */    ',
  'He followed her to school one day-'
]
--(EndTag at the beginning) -- parser flat (FLAT mode, no callback) ---------
test result data:  [
  {
    lineNumber: 1,
    lineType: 'endTag',
    state: 'outOfBlock',
    data: ' */ '
  },
  {
    lineNumber: 2,
    lineType: 'line',
    state: 'outOfBlock',
    data: 'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb'
  },
  {
    lineNumber: 3,
    lineType: 'line',
    state: 'outOfBlock',
    data: 'Mary had a little lamb,'
  },
  {
    lineNumber: 4,
    lineType: 'startTag',
    state: 'inBlock',
    data: '  /* '
  },
  {
    lineNumber: 5,
    lineType: 'line',
    state: 'inBlock',
    data: '   The lamb was sure to go ;'
  },
  {
    lineNumber: 6,
    lineType: 'endTag',
    state: 'inBlock',
    data: '   */    '
  },
  {
    lineNumber: 7,
    lineType: 'line',
    state: 'outOfBlock',
    data: 'He followed her to school one day-'
  }
]
test result errors:  [
  {
    name: 'ParserError',
    message: 'End-tag at the very beginning is not allowed',
    lineNumber: 1
  }
]
--(EndTag at the beginning) -- parser grouped (GROUPED mode, no callback) ---------
test result data:  [
  {
    state: 'outOfBlock',
    startLineNumber: 1,
    startTagLine: null,
    endTagLine: null,
    data: [
      ' */ ',
      'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
      'Mary had a little lamb,'
    ]
  },
  {
    state: 'inBlock',
    startLineNumber: 5,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: [ '   The lamb was sure to go ;' ]
  },
  {
    state: 'outOfBlock',
    startLineNumber: 7,
    startTagLine: null,
    endTagLine: null,
    data: [ 'He followed her to school one day-' ]
  }
]
test result errors:  [
  {
    name: 'ParserError',
    message: 'End-tag at the very beginning is not allowed',
    lineNumber: 1
  }
]
--(EndTag at the beginning) -- parser grouped custom error (GROUPED mode, custom error callback) ---------
test result data:  [
  {
    state: 'outOfBlock',
    startLineNumber: 1,
    startTagLine: null,
    endTagLine: null,
    data: [
      ' */ ',
      'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
      'Mary had a little lamb,'
    ]
  },
  {
    state: 'inBlock',
    startLineNumber: 5,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: [ '   The lamb was sure to go ;' ]
  },
  {
    state: 'outOfBlock',
    startLineNumber: 7,
    startTagLine: null,
    endTagLine: null,
    data: [ 'He followed her to school one day-' ]
  }
]
test result errors:  [ 1 ]
--(EndTag at the beginning) -- parser grouped null error (GROUPED mode, nothing-returning error callback) ---------
ERROR on line: 1
test result data:  [
  {
    state: 'outOfBlock',
    startLineNumber: 1,
    startTagLine: null,
    endTagLine: null,
    data: [
      ' */ ',
      'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
      'Mary had a little lamb,'
    ]
  },
  {
    state: 'inBlock',
    startLineNumber: 5,
    startTagLine: '  /* ',
    endTagLine: '   */    ',
    data: [ '   The lamb was sure to go ;' ]
  },
  {
    state: 'outOfBlock',
    startLineNumber: 7,
    startTagLine: null,
    endTagLine: null,
    data: [ 'He followed her to school one day-' ]
  }
]
test result errors:  []
== lines (multiple error types) ===============================================================================
 [
  '*/',
  'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
  'Mary had a little lamb,',
  ' /*',
  ' /*',
  '--  Its fleece was white as snow,',
  '--And every where that Mary went',
  '*/  ',
  '*/  ',
  '   The lamb was sure to go ;',
  'He followed her to school one day-',
  ' /* ',
  '--   That was against the rule,',
  '*/',
  ' /* ',
  'It made the children laugh and play,',
  '   To see a lamb at school.'
]
--(multiple error types) -- parser flat (FLAT mode, no callback) ---------
test result data:  [
  {
    lineNumber: 1,
    lineType: 'endTag',
    state: 'outOfBlock',
    data: '*/'
  },
  {
    lineNumber: 2,
    lineType: 'line',
    state: 'outOfBlock',
    data: 'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb'
  },
  {
    lineNumber: 3,
    lineType: 'line',
    state: 'outOfBlock',
    data: 'Mary had a little lamb,'
  },
  {
    lineNumber: 4,
    lineType: 'startTag',
    state: 'inBlock',
    data: ' /*'
  },
  {
    lineNumber: 5,
    lineType: 'startTag',
    state: 'inBlock',
    data: ' /*'
  },
  {
    lineNumber: 6,
    lineType: 'line',
    state: 'inBlock',
    data: '--  Its fleece was white as snow,'
  },
  {
    lineNumber: 7,
    lineType: 'line',
    state: 'inBlock',
    data: '--And every where that Mary went'
  },
  { lineNumber: 8, lineType: 'endTag', state: 'inBlock', data: '*/  ' },
  {
    lineNumber: 9,
    lineType: 'endTag',
    state: 'outOfBlock',
    data: '*/  '
  },
  {
    lineNumber: 10,
    lineType: 'line',
    state: 'outOfBlock',
    data: '   The lamb was sure to go ;'
  },
  {
    lineNumber: 11,
    lineType: 'line',
    state: 'outOfBlock',
    data: 'He followed her to school one day-'
  },
  {
    lineNumber: 12,
    lineType: 'startTag',
    state: 'inBlock',
    data: ' /* '
  },
  {
    lineNumber: 13,
    lineType: 'line',
    state: 'inBlock',
    data: '--   That was against the rule,'
  },
  { lineNumber: 14, lineType: 'endTag', state: 'inBlock', data: '*/' },
  {
    lineNumber: 15,
    lineType: 'startTag',
    state: 'inBlock',
    data: ' /* '
  },
  {
    lineNumber: 16,
    lineType: 'line',
    state: 'inBlock',
    data: 'It made the children laugh and play,'
  },
  {
    lineNumber: 17,
    lineType: 'line',
    state: 'inBlock',
    data: '   To see a lamb at school.'
  }
]
test result errors:  [
  {
    name: 'ParserError',
    message: 'End-tag at the very beginning is not allowed',
    lineNumber: 1
  },
  {
    name: 'ParserError',
    message: 'Repeated start-tag. No previous matching end-tag found',
    lineNumber: 5
  },
  {
    name: 'ParserError',
    message: 'Repeated end-tag. No previous matching start-tag found',
    lineNumber: 9
  },
  {
    name: 'ParserError',
    message: 'Missing end-tag at the end of the final block',
    lineNumber: 17
  }
]
--(multiple error types) -- parser grouped (GROUPED mode, no callback) ---------
test result data:  [
  {
    state: 'outOfBlock',
    startLineNumber: 1,
    startTagLine: null,
    endTagLine: null,
    data: [
      '*/',
      'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
      'Mary had a little lamb,'
    ]
  },
  {
    state: 'inBlock',
    startLineNumber: 5,
    startTagLine: ' /*',
    endTagLine: '*/  ',
    data: [
      ' /*',
      '--  Its fleece was white as snow,',
      '--And every where that Mary went'
    ]
  },
  {
    state: 'outOfBlock',
    startLineNumber: 9,
    startTagLine: null,
    endTagLine: null,
    data: [
      '*/  ',
      '   The lamb was sure to go ;',
      'He followed her to school one day-'
    ]
  },
  {
    state: 'inBlock',
    startLineNumber: 13,
    startTagLine: ' /* ',
    endTagLine: '*/',
    data: [ '--   That was against the rule,' ]
  },
  {
    state: 'inBlock',
    startLineNumber: 16,
    startTagLine: ' /* ',
    endTagLine: null,
    data: [
      'It made the children laugh and play,',
      '   To see a lamb at school.'
    ]
  }
]
test result errors:  [
  {
    name: 'ParserError',
    message: 'End-tag at the very beginning is not allowed',
    lineNumber: 1
  },
  {
    name: 'ParserError',
    message: 'Repeated start-tag. No previous matching end-tag found',
    lineNumber: 5
  },
  {
    name: 'ParserError',
    message: 'Repeated end-tag. No previous matching start-tag found',
    lineNumber: 9
  },
  {
    name: 'ParserError',
    message: 'Missing end-tag at the end of the final block',
    lineNumber: 17
  }
]
--(multiple error types) -- parser grouped custom error (GROUPED mode, custom error callback) ---------
test result data:  [
  {
    state: 'outOfBlock',
    startLineNumber: 1,
    startTagLine: null,
    endTagLine: null,
    data: [
      '*/',
      'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
      'Mary had a little lamb,'
    ]
  },
  {
    state: 'inBlock',
    startLineNumber: 5,
    startTagLine: ' /*',
    endTagLine: '*/  ',
    data: [
      ' /*',
      '--  Its fleece was white as snow,',
      '--And every where that Mary went'
    ]
  },
  {
    state: 'outOfBlock',
    startLineNumber: 9,
    startTagLine: null,
    endTagLine: null,
    data: [
      '*/  ',
      '   The lamb was sure to go ;',
      'He followed her to school one day-'
    ]
  },
  {
    state: 'inBlock',
    startLineNumber: 13,
    startTagLine: ' /* ',
    endTagLine: '*/',
    data: [ '--   That was against the rule,' ]
  },
  {
    state: 'inBlock',
    startLineNumber: 16,
    startTagLine: ' /* ',
    endTagLine: null,
    data: [
      'It made the children laugh and play,',
      '   To see a lamb at school.'
    ]
  }
]
test result errors:  [ 1, 5, 9, 17 ]
--(multiple error types) -- parser grouped null error (GROUPED mode, nothing-returning error callback) ---------
ERROR on line: 1
ERROR on line: 5
ERROR on line: 9
ERROR on line: 17
test result data:  [
  {
    state: 'outOfBlock',
    startLineNumber: 1,
    startTagLine: null,
    endTagLine: null,
    data: [
      '*/',
      'https://en.wikipedia.org/wiki/Mary_Had_a_Little_Lamb',
      'Mary had a little lamb,'
    ]
  },
  {
    state: 'inBlock',
    startLineNumber: 5,
    startTagLine: ' /*',
    endTagLine: '*/  ',
    data: [
      ' /*',
      '--  Its fleece was white as snow,',
      '--And every where that Mary went'
    ]
  },
  {
    state: 'outOfBlock',
    startLineNumber: 9,
    startTagLine: null,
    endTagLine: null,
    data: [
      '*/  ',
      '   The lamb was sure to go ;',
      'He followed her to school one day-'
    ]
  },
  {
    state: 'inBlock',
    startLineNumber: 13,
    startTagLine: ' /* ',
    endTagLine: '*/',
    data: [ '--   That was against the rule,' ]
  },
  {
    state: 'inBlock',
    startLineNumber: 16,
    startTagLine: ' /* ',
    endTagLine: null,
    data: [
      'It made the children laugh and play,',
      '   To see a lamb at school.'
    ]
  }
]
test result errors:  []
